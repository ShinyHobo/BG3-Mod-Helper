<Window x:Class="bg3_mod_packer.Views.IndexingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:helpers="clr-namespace:bg3_mod_packer.XAMLHelpers"
        mc:Ignorable="d"
        MinWidth="1250"
        MinHeight="250"
        Title="Index Search" Height="430" Width="1250">
    <Grid>
        <Button x:Name="searchFilesButton" Content="Search Files" HorizontalAlignment="Left" Margin="668,10,0,0" VerticalAlignment="Top" Width="100" Height="23" Click="SearchFiles_Click" Cursor="Hand"/>
        <TextBox x:Name="search" HorizontalAlignment="Left" Height="23" Margin="10,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="653" KeyDown="Search_KeyDown"/>
        <ListView x:Name="searchResults" Margin="10,38,0,10" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Left" HorizontalAlignment="Left" MinWidth="758" Width="758" ItemsSource="{Binding Results}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <Button x:Name="path" MouseDoubleClick="Path_MouseDoubleClick" Background="White" BorderBrush="White" HorizontalContentAlignment="Stretch" 
                                VerticalContentAlignment="Stretch" Cursor="Hand" MouseEnter="Path_MouseEnter" MouseLeave="Path_MouseLeave">
                            <TextBlock Text="{Binding Path}" HorizontalAlignment="Stretch"></TextBlock>
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <TextBlock TextDecorations="Underline">
                                        <ContentPresenter />
                                    </TextBlock>
                                </ControlTemplate>
                            </Button.Template>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Foreground" Value="Blue" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="Red" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <TextBox IsReadOnly="True" Text="{Binding SelectedPath}"  Margin="773,10,117,0" VerticalAlignment="Top" Height="23" HorizontalAlignment="Stretch" Background="Transparent"/>
        <Button x:Name="convertAndOpenButton" Content="Convert &amp; Open" Margin="0,10,10,0" Width="102" Height="23" HorizontalAlignment="Right" VerticalAlignment="Top" 
                Click="ConvertAndOpenButton_Click" IsEnabled="False" Cursor="Hand"></Button>
        <ListView ItemsSource="{Binding FileContents}" Margin="773,38,10,10">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Name="stack">
                        <TextBlock FontWeight="Bold" Text="{Binding Key, StringFormat={}{0}:}" MinWidth="40"></TextBlock>
                        <helpers:SelectableTextBlock helpers:TextBlockFormatter.FormattedText="{Binding Text, Mode=OneWay}" Background="Transparent" Cursor="IBeam"></helpers:SelectableTextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</Window>
